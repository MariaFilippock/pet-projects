const API_KEY="5ed60a5aaf934bf49c7150247243010",LOCAL_STORAGE_APP_STATE_KEY="weatherApp",container=document.querySelector(".container_main");renderApp();const state=JSON.parse(localStorage.getItem("weatherApp"))||{cities:[],switch:"C",error:""};function renderApp(){container.innerHTML='<div class="search_header">\n        <span class="search_title">\u041f\u0440\u043e\u0433\u043d\u043e\u0437 \u043f\u043e\u0433\u043e\u0434\u044b</span>\n\n        <form id="search_form">\n            <input class="search_input" type="text" placeholder="\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u043e\u0440\u043e\u0434\u0430"/>\n            <button class="search_btn" type="submit">\u041f\u043e\u0438\u0441\u043a</button>\n            <button class="switch_temp_btn" type="button" data-action="switch">\u2109/\xb0C</button>\n        </form>\n\n    </div>\n\n    <div class="err_message" id="error_block"></div>\n\n    <div class="clear_all" data-action="clearAll">\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0432\u0441\u0451</div>\n\n    <div class="mask" id="page_preloader">\n        <div class="loader"></div>\n    </div>\n\n    <div class="cards_container"></div>',attachHTMLElementsHandlers()}function getHTMLElements(){return{searchInput:document.querySelector(".search_input"),searchBtn:document.querySelector(".search_btn"),cardsContainer:document.querySelector(".cards_container"),switchTempBtn:document.querySelector(".switch_temp_btn"),clearAll:document.querySelector(".clear_all"),errBlock:document.getElementById("error_block")}}function attachHTMLElementsHandlers(){const e=getHTMLElements();e.searchBtn.addEventListener("click",handleSearchCity),e.clearAll.addEventListener("click",handleClearAll),e.switchTempBtn.addEventListener("click",handleSwitchTemp)}function renderLoading(e){const t=document.getElementById("page_preloader");e?t.classList.remove("hidden"):t.classList.add("hidden")}function handleSearchCity(e){e.preventDefault();const t=getHTMLElements().searchInput;t.value&&(renderLoading(!0),loadWeatherOfCity(t.value).then(()=>{saveToLocalStorage()}).catch(e=>{console.error(e)}).finally(()=>{renderLoading(!1),renderWeather()}))}function removeSpacesInId(e){return e.replaceAll(" ","")}function renderShowMoreInfo(e){return e.isMoreDetailsVisible?`<div class="uv">\u0423\u0424-\u0438\u043d\u0434\u0435\u043a\u0441: ${e.uv}</div>\n                                <div class="wind_dir">\u0412\u0435\u0442\u0435\u0440: ${e.windDir}</div>\n                                <div class="text_info">\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435: ${e.conditionWeather}</div>\n                                <div class="hidden_info_btn" data-action="hiddenInfo">\u0421\u043a\u0440\u044b\u0442\u044c</div>`:""}function renderWeather(){if(getHTMLElements().cardsContainer.innerHTML="",state.cities.length>0){const e=getHTMLElements();state.cities.forEach(t=>{const n=new Date(t.timeOfWeather).toLocaleTimeString(),a="C"===state.switch?`${t.temp} \xb0C`:`${t.tempF} \u2109`,r=`\n                <div class="weather_info" id = ${removeSpacesInId(t.city)}>\n                <button class='clear_btn' type="button" data-action = 'clear'>x</button>\n                <div class="city_name">${t.city}</div>\n                <div class="city_temperature">${a}</div>\n                <img alt="icon_temperature" class="icon_temperature" src = '${t.icon}' /> \n                <div class="additional_info">\n                    <div class="additional_title" data-action="showInfo">\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435</div>\n                    <div class="container_additional">${renderShowMoreInfo(t)}</div>\n                </div>\n                <div class="local_time">\u0410\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e \u043d\u0430 ${n}</div>\n                </div>`;e.cardsContainer.insertAdjacentHTML("beforeend",r);const i=document.getElementById(removeSpacesInId(t.city)),c=i.querySelector(".clear_btn"),o=i.querySelector(".additional_title"),s=i.querySelector(".hidden_info_btn");if(c.addEventListener("click",handleClearCard),o.addEventListener("click",e=>handleShowAdditionalInfo(e,t)),s)return s.addEventListener("click",e=>handleHiddenAdditionalInfo(e,t))}),e.errBlock.innerText=state.error}else renderEmpty()}function handleHiddenAdditionalInfo(e,t){"hiddenInfo"===e.target.dataset.action&&(t.isMoreDetailsVisible=!1,renderWeather(),saveToLocalStorage())}function handleShowAdditionalInfo(e,t){"showInfo"===e.target.dataset.action&&(t.isMoreDetailsVisible=!0,renderWeather(),saveToLocalStorage())}function handleClearAll(e){"clearAll"===e.target.dataset.action&&(state.cities=[],saveToLocalStorage(),renderWeather())}function handleClearCard(e){if("clear"!==e.target.dataset.action)return;let t=e.target.closest(".weather_info").id;state.cities=state.cities.filter(e=>removeSpacesInId(e.city)!==t),saveToLocalStorage(),renderWeather()}function handleSwitchTemp(){"C"===state.switch?state.switch="F":state.switch="C",renderWeather(),saveToLocalStorage()}function loadWeatherOfCity(e){const t=`http://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${e}`,n=getHTMLElements().searchInput;return fetch(t).then(e=>e.json()).then(t=>{if(t.error)return state.error="\u041e\u0448\u0438\u0431\u043a\u0430! \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u043e\u0440\u043e\u0434\u0430.",new Error(state.error);updateCityState(t,e),state.error="",n.value=""})}function updateCityState(e,t){let n=state.cities.findIndex(e=>e.city===t);const a={temp:e?.current?.temp_c,city:e?.location?.name,icon:e?.current?.condition.icon,timeOfWeather:e?.location?.localtime,tempF:e?.current?.temp_f,uv:e?.current?.uv,windDir:e?.current?.wind_dir,conditionWeather:e?.current?.condition?.text};n>=0?state.cities[n]={...state.cities[n],...a}:state.cities.push({...a,isMoreDetailsVisible:!1})}function saveToLocalStorage(){localStorage.setItem("weatherApp",JSON.stringify(state))}function renderEmpty(){return getHTMLElements().cardsContainer.insertAdjacentHTML("beforeend",'<div class="empty_container">\u041f\u0443\u0441\u0442\u043e. \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0433\u043e\u0440\u043e\u0434.<div/>')}function initApp(){state.cities.length>0?(renderLoading(!0),Promise.all(state.cities.map(e=>loadWeatherOfCity(e.city))).then(()=>renderWeather()).catch(e=>{renderWeather(),console.error(e)}).finally(()=>{renderLoading(!1)})):(renderLoading(!1),renderEmpty())}initApp();