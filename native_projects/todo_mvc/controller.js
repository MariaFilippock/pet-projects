export class Controller{constructor(e,t){this.model=e,this.view=t,this.view.renderApp(),this.initHandlers(),this.onTodosChanged()}initHandlers(){this.view.initAddTaskHandler(this.handleAddTask),this.view.initRemoveTaskHandler(this.handleRemoveTask),this.view.initCompleteTaskHandler(this.handleCompleteTask),this.view.initAddToFavoriteTaskHandler(this.handleAddToFavorite),this.view.initSetFilter(this.handleChangeFilter)}handleAddTask=e=>{this.model.addTask(e),this.onTodosChanged()};handleRemoveTask=e=>{this.model.deleteTask(e),this.onTodosChanged()};handleCompleteTask=e=>{this.model.completeTask(e),this.onTodosChanged()};handleChangePage=e=>{this.model.setCurrentPage(e),this.onTodosChanged()};handleAddToFavorite=e=>{this.model.addToFavoriteTask(e),this.onTodosChanged()};handleChangeFilter=e=>{this.model.setFilter(e),this.onTodosChanged()};onTodosChanged=()=>{this.view.renderFilters(this.model.state.filter),this.view.renderTodoList(this.model.getTasksForCurrentPage(this.model.state)),this.view.renderPagination(this.model.state,this.model.filterTaskList(this.model.state),this.handleChangePage)}}